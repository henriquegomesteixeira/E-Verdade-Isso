@model List<System.ServiceModel.Syndication.SyndicationItem>

@{
	ViewData["Title"] = "Verificação de Notícia";
	var perguntas = ViewBag.Perguntas as List<string>;
	var dica = ViewBag.Dica as string;
	var icones = new[] { "volleyball", "scale", "coins", "heart-pulse", "cpu" };
}

<div class="mx-auto w-full max-w-4xl px-4">
	<div class="flex flex-col justify-center min-h-screen gap-4">
		<h1 class="font-poppins font-medium text-3xl text-primary">O que você quer saber?</h1>
		<form method="post" class="bg-white rounded-xl border-[1.5px] border-gray-300 w-full p-3">
			<div id="inputArea" class="mb-3">
				<textarea id="autoResizeTextarea"
						  name="texto"
						  rows="1"
						  class="w-full overflow-hidden resize-none max-h-52 outline-none transition-all focus:text-text-primary"
						  placeholder="Pergunte qualquer coisa..."></textarea>
			</div>

			<div class="flex justify-between items-center">
				<div class="relative inline-flex rounded-lg bg-[#e0f3eb] p-[2.5px] w-fit">
					<div id="slider"
						 class="absolute top-[2.5px] left-[2.5px] w-[95px] h-[33px] bg-white rounded-lg border border-[#9ec9bc] shadow transition-all duration-300 ease-in-out z-0"></div>


					<button type="button" id="toggleTextBtn"
							class="relative z-10 flex items-center gap-1 px-4 py-1.5 text-sm hover:opacity-100 font-medium text-primary">
						<i data-lucide="file-text" class="w-4 h-4"></i>
						Texto
					</button>

					<button type="button" id="toggleUrlBtn"
							class="relative z-10 flex items-center gap-1 px-4 py-1.5 text-sm font-medium text-primary opacity-60 hover:opacity-100 transition">
						<i data-lucide="link" class="w-4 h-4"></i>
						URL
					</button>
				</div>

				<div class="flex items-center gap-2">
					<button type="button" class="flex justify-center items-center group rounded-lg p-2 hover:bg-gray-light">
						<i data-lucide="paperclip" class="w-4 h-4 text-gray-dark group-hover:text-primary"></i>
					</button>
					<button type="submit"
							class="flex justify-center items-center bg-primary text-white p-2 rounded-lg transition
                                    disabled:opacity-50 disabled:cursor-not-allowed enabled:hover:opacity-85"
							disabled>
						<i data-lucide="arrow-right" class="w-4 h-4"></i>
					</button>
				</div>
			</div>
		</form>

		@if (!string.IsNullOrWhiteSpace(dica))
		{
			<div class="w-full flex items-center border border-gray-300 text-gray-800 text-xs p-2 rounded-lg">
				<i data-lucide="shield-alert" class="w-24 inline-block text-primary mr-2"></i>
				<p class="text-gray-dark">@dica</p>
			</div>
		}

		@if (perguntas != null && perguntas.Any())
		{
			<ul class="flex flex-wrap gap-2 justify-center">
				@for (int i = 0; i < perguntas.Count && i < icones.Length; i++)
				{
					var pergunta = perguntas[i];
					var icone = icones[i];

					<li>
						<form method="post" class="inline-block">
							<input type="hidden" name="texto" value="@pergunta" />
							<button type="submit" class="flex items-center gap-2 hover:bg-gray-100 hover:bg-gray-100 border border-gray-300 px-3 py-1 rounded-full text-gray-dark text-sm">
								<i data-lucide="@icone" class="w-4 h-4"></i> @pergunta
							</button>
						</form>
					</li>
				}
			</ul>
		}
	</div>
</div>

<script src="~/js/verificar.js"></script>


